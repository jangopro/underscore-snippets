{
	"_after": {
		"prefix": "_after",
		"body": "_(${1:count}).after(${2:functionName})",
		"description": "Underscore _.after()",
		"scope": "source.js"
	},
	"_all": {
		"prefix": "_all",
		"body": "_(${1:list}).all(${2:functionName})",
		"description": "Underscore _.all()",
		"scope": "source.js"
	},
	"_any": {
		"prefix": "_any",
		"body": "_(${1:list}).any(${2:[iterator]})",
		"description": "Underscore _.any()",
		"scope": "source.js"
	},
	"_bind": {
		"prefix": "_bind",
		"body": "_(${1:functionName}).bind(${2:object}, ${3:[*arguments]})",
		"description": "Underscore _.bind()",
		"scope": "source.js"
	},
	"_bindAll": {
		"prefix": "_bindAll",
		"body": "_(${1:object}).bindAll(${2:[*methodNames]})",
		"description": "Underscore _.bindAll()",
		"scope": "source.js"
	},
	"_chain": {
		"prefix": "_chain",
		"body": "_(${1:obj}).chain()",
		"description": "Underscore _.chain()",
		"scope": "source.js"
	},
	"_clone": {
		"prefix": "_clone",
		"body": "_(${1:object}).clone()",
		"description": "Underscore _.clone()",
		"scope": "source.js"
	},
	"_compact": {
		"prefix": "_compact",
		"body": "_(${1:array}).compact()",
		"description": "Underscore _.compact()",
		"scope": "source.js"
	},
	"_compose": {
		"prefix": "_compose",
		"body": "_.compose(${1:*functions})",
		"description": "Underscore _.compose()",
		"scope": "source.js"
	},
	
	"_countBy": {
		"prefix": "_countBy",
		"body": "_(${1:list}).countBy( function(${2:element}) {\n  ${3:// return something}\n})",
		"description": "Underscore _.countBy()",
		"scope": "source.js"
	},
	"_debounce": {
		"prefix": "_debounce",
		"body": "_(${1:functionName}).debounce(${2:waitInMilliseconds})",
		"description": "Underscore _.debounce()",
		"scope": "source.js"
	},
	"_defaults": {
		"prefix": "_defaults",
		"body": "_(${1:object}).defaults(${2:*defaults})",
		"description": "Underscore _.defaults()",
		"scope": "source.js"
	},
	"_defer": {
		"prefix": "_defer",
		"body": "_(${1:functionName}).defer(${2:[*arguments]})",
		"description": "Underscore _.defer()",
		"scope": "source.js"
	},
	"_delay": {
		"prefix": "_delay",
		"body": "_(${1:functionName}).delay(${2:waitInMilliseconds}${3:, [*arguments]})",
		"description": "Underscore _.delay()",
		"scope": "source.js"
	},
	"_difference": {
		"prefix": "_difference",
		"body": "_(${1:array}).difference(${2:*others})",
		"description": "Underscore _.difference()",
		"scope": "source.js"
	},
	"_escape": {
		"prefix": "_escape",
		"body": "_(${1:string}).escape()",
		"description": "Underscore _.escape()",
		"scope": "source.js"
	},
	"_extend": {
		"prefix": "_extend",
		"body": "_(${1:destination}).extend(${2:*sources})",
		"description": "Underscore _.extend()",
		"scope": "source.js"
	},
	"_first": {
		"prefix": "_first",
		"body": "_(${1:array}).first(${2:[n]})",
		"description": "Underscore _.first()",
		"scope": "source.js"
	},
	"_flatten": {
		"prefix": "_flatten",
		"body": "_(${1:array}).flatten(${2:[shallow]})",
		"description": "Underscore _.flatten()",
		"scope": "source.js"
	},
	"_functions": {
		"prefix": "_functions",
		"body": "_(${1:object}).functions()",
		"description": "Underscore _.functions()",
		"scope": "source.js"
	},
	"_groupBy": {
		"prefix": "_groupBy",
		"body": "_(${1:list}).groupBy( function(${2:value}) {\n  ${3:// return …}\n})",
		"description": "Underscore _.groupBy()",
		"scope": "source.js"
	},
	"_has": {
		"prefix": "_has",
		"body": "_(${1:object}).has(${2:value})",
		"description": "Underscore _.has()",
		"scope": "source.js"
	},
	"_identity": {
		"prefix": "_identity",
		"body": "_(${1:value}).identity()",
		"description": "Underscore _.identity()",
		"scope": "source.js"
	},
	
	"_initial": {
		"prefix": "_initial",
		"body": "_(${1:array}).initial(${2:[n]})",
		"description": "Underscore _.initial()",
		"scope": "source.js"
	},
	"_intersection": {
		"prefix": "_intersection",
		"body": "_(${1:*arrays}).intersection()",
		"description": "Underscore _.intersection()",
		"scope": "source.js"
	},
	"_invert": {
		"prefix": "_invert",
		"body": "_(${1:object}).invert()",
		"description": "Underscore _.invert()",
		"scope": "source.js"
	},
	"_invoke": {
		"prefix": "_invoke",
		"body": "_(${1:list}).invoke(${2:methodName}${3:, [*arguments]})",
		"description": "Underscore _.invoke()",
		"scope": "source.js"
	},
	
	"_keys": {
		"prefix": "_keys",
		"body": "_(${1:object}).keys()",
		"description": "Underscore _.keys()",
		"scope": "source.js"
	},
	"_last": {
		"prefix": "_last",
		"body": "_(${1:array}).last(${2:[n]})",
		"description": "Underscore _.last()",
		"scope": "source.js"
	},
	"_lastIndexOf": {
		"prefix": "_lastIndexOf",
		"body": "_(${1:array}).lastIndexOf(${2:value}${3:, [fromIndex]})",
		"description": "Underscore _.lastIndexOf()",
		"scope": "source.js"
	},
	"_max": {
		"prefix": "_max",
		"body": "_(${1:list}).max( function(${2:value}) {\n  ${3:// return …}\n})",
		"description": "Underscore _.max()",
		"scope": "source.js"
	},
	"_memoize": {
		"prefix": "_memoize",
		"body": "_(${1:functionName}).memoize(${2:[hashFunction]})",
		"description": "Underscore _.memoize()",
		"scope": "source.js"
	},
	"_min": {
		"prefix": "_min",
		"body": "_(${1:list}).min( function(${2:value}) {\n  ${3:// return …}\n})",
		"description": "Underscore _.min()",
		"scope": "source.js"
	},
	"_mixin": {
		"prefix": "_mixin",
		"body": "_.mixin(${1:object})",
		"description": "Underscore _.mixin()",
		"scope": "source.js"
	},
	"_noConflict": {
		"prefix": "_noConflict",
		"body": "_.noConflict()",
		"description": "Underscore _.noConflict()",
		"scope": "source.js"
	},
	"_object": {
		"prefix": "_object",
		"body": "_(${1:list}).object(${2:[values]})",
		"description": "Underscore _.object()",
		"scope": "source.js"
	},
	"_omit": {
		"prefix": "_omit",
		"body": "_(${1:object}).omit(${2:*keys})",
		"description": "Underscore _.omit()",
		"scope": "source.js"
	},
	"_once": {
		"prefix": "_once",
		"body": "_(${1:functionName}).once()",
		"description": "Underscore _.once()",
		"scope": "source.js"
	},
	"_pairs": {
		"prefix": "_pairs",
		"body": "_(${1:object}).pairs()",
		"description": "Underscore _.pairs()",
		"scope": "source.js"
	},
	"_partial": {
		"prefix": "_partial",
		"body": "_(${1:functionName}).partial(${3:[*arguments]})",
		"description": "Underscore _.partial()",
		"scope": "source.js"
	},
	"_pick": {
		"prefix": "_pick",
		"body": "_(${1:object}).pick(${2:*keys})",
		"description": "Underscore _.pick()",
		"scope": "source.js"
	},
	"_pluck": {
		"prefix": "_pluck",
		"body": "_(${1:list}).pluck(${2:propertyName})",
		"description": "Underscore _.pluck()",
		"scope": "source.js"
	},
	"_random": {
		"prefix": "_random",
		"body": "_.random(${1:min}, ${2:max})",
		"description": "Underscore _.random()",
		"scope": "source.js"
	},
	"_range": {
		"prefix": "_range",
		"body": "_.range(${1:[start], }${2:stop}${3:, [step]})",
		"description": "Underscore _.range()",
		"scope": "source.js"
	},
	"_reduce": {
		"prefix": "_reduce",
		"body": "_(${1:list}).reduce( function( ${2:memo}, ${3:value}, ${4:key}, ${1:list} ) {\n  ${6:// return …}\n}, ${5:memo} )",
		"description": "Underscore _.reduce()",
		"scope": "source.js"
	},
	"_reduceRight": {
		"prefix": "_reduceRight",
		"body": "_(${1:list}).reduceRight( function( ${2:memo}, ${3:value}, ${4:key}, ${1:list} ) {\n  ${6:// return …}\n}, ${5:memo} )",
		"description": "Underscore _.reduceRight()",
		"scope": "source.js"
	},
	"_reject": {
		"prefix": "_reject",
		"body": "_(${1:list}).reject( function(${2:value}) {\n  ${3:// return …}\n})",
		"description": "Underscore _.reject()",
		"scope": "source.js"
	},
	"_rest": {
		"prefix": "_rest",
		"body": "_(${1:array}).rest(${2:[index]})",
		"description": "Underscore _.rest()",
		"scope": "source.js"
	},
	"_result": {
		"prefix": "_result",
		"body": "_(${1:object}).result(${2:property})",
		"description": "Underscore _.result()",
		"scope": "source.js"
	},
	"_shuffle": {
		"prefix": "_shuffle",
		"body": "_(${1:list}).shuffle()",
		"description": "Underscore _.shuffle()",
		"scope": "source.js"
	},
	"_sortBy": {
		"prefix": "_sortBy",
		"body": "_(${1:list}).sortBy( function(${2:value}) {\n  ${3:// return …}\n})",
		"description": "Underscore _.sortBy()",
		"scope": "source.js"
	},
	"_sortedIndex": {
		"prefix": "_sortedIndex",
		"body": "_(${1:list}).sortedIndex(${2:value})",
		"description": "Underscore _.sortedIndex()",
		"scope": "source.js"
	},
	"_tap": {
		"prefix": "_tap",
		"body": "_(${1:object}).tap(${2:functionName})",
		"description": "Underscore _.tap()",
		"scope": "source.js"
	},
	"_template": {
		"prefix": "_template",
		"body": "_(${1:templateString}).template(${2:[data]}${3:, [settings]})",
		"description": "Underscore _.template()",
		"scope": "source.js"
	},
	"_throttle": {
		"prefix": "_throttle",
		"body": "_(${1:functionName}).throttle(${2:waitInMilliseconds})",
		"description": "Underscore _.throttle()",
		"scope": "source.js"
	},
	"_times": {
		"prefix": "_times",
		"body": "_(${1:n}).times( function(${2:value}) {\n  ${3:}\n})",
		"description": "Underscore _.times()",
		"scope": "source.js"
	},
	"_toArray": {
		"prefix": "_toArray",
		"body": "_(${1:list}).toArray()",
		"description": "Underscore _.toArray()",
		"scope": "source.js"
	},
	"_union": {
		"prefix": "_union",
		"body": "_(${1:*arrays}).union()",
		"description": "Underscore _.union()",
		"scope": "source.js"
	},
	"_uniq": {
		"prefix": "_uniq",
		"body": "_(${1:array}).uniq(${2:[isSorted]}${2:, [iterator]})",
		"description": "Underscore _.uniq()",
		"scope": "source.js"
	},
	"_uniqueId": {
		"prefix": "_uniqueId",
		"body": "_(${1:[prefix]}).uniqueId()",
		"description": "Underscore _.uniqueId()",
		"scope": "source.js"
	},
	"_value": {
		"prefix": "_value",
		"body": "_(obj).value()",
		"description": "Underscore _.value()",
		"scope": "source.js"
	},
	"_values": {
		"prefix": "_values",
		"body": "_(${1:object}).values()",
		"description": "Underscore _.values()",
		"scope": "source.js"
	},
	"_where": {
		"prefix": "_where",
		"body": "_(${1:list}).where(${2:properties})",
		"description": "Underscore _.where()",
		"scope": "source.js"
	},
	"_without": {
		"prefix": "_without",
		"body": "_(${1:array}).without(${2:[*values]})",
		"description": "Underscore _.without()",
		"scope": "source.js"
	},
	"_wrap": {
		"prefix": "_wrap",
		"body": "_(${1:functionName}).wrap( function(${2:fn}) {\n  ${3:}\n})",
		"description": "Underscore _.wrap()",
		"scope": "source.js"
	},
	"_zip": {
		"prefix": "_zip",
		"body": "_(${1:*arrays}).zip()",
		"description": "Underscore _.zip()",
		"scope": "source.js"
	}
}